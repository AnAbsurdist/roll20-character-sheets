mixin textInput(name)
	- const attrName = name.replace(/ /g, '_');
	label(data-i18n-title=name)
		input(data-i18n-placeholder=name name=`attr_${attrName}` placeholder=name title=`@{${attrName}}` type='text' value='')

mixin numberInput(name)
	- const attrName = name.replace(/ /g, '_');
	label(data-i18n-title=name)
		input(name=`attr_${attrName}` placeholder='0' title=`@{${attrName}}` type='number' value='')

mixin hiddenInput(name, value)
	- const attrName = name.replace(/ /g, '_');
	input(name=`attr_${attrName}` type='hidden' value=value)

mixin checkboxInput(name)
	- const attrName = name.replace(/ /g, '_');
	label.styled-checkbox.grid(data-i18n-title=name)
		input(name=`attr_${attrName}` title=`@{${attrName}}` type='checkbox' value=name)
		span.pictos 3

mixin checkboxSkills(name)
	- const attrName = name.replace(/ /g, '_');
	each val in skillRanks
		- const value = val === 'trained' ? 0 : val.slice(1);
		label.styled-checkbox.grid(data-i18n-title=name)
			input(name=`attr_${attrName}` title=`@{${attrName}}` type='checkbox' value=value)
			span.pictos 3

mixin checkboxSymbol (name, symbol)
	- const attrName = name.replace(/ /g, '_');
	input.toggles.text-center(name=`attr_${attrName}` title=`@{${attrName}}` type='checkbox' value=name)
	span.toggles.text-center.pictos #{symbol}

mixin textarea(name)
	textarea(name=`attr_${name}` placeholder=name)

mixin rollButton(name)
	- const attrName = name.replace(/ /g, '-');
	button.text-capitalize(data-i18n=name name=`roll_${attrName}` type='roll' value!=`&{template:rolls} {{header=^{${name}}}} {{dice=[[1d20[Roll]]]}}`)

mixin repeatingText(name)
	- const attrName = name.replace(/ /g, '-');
	fieldset(class=`repeating_${attrName}`)
		.rowx.grid.descriptor
			button.text-left.eclipse.font-weight-bold
				span(name='attr_name')
			+checkboxSymbol('collapse', 'i')
			+checkboxSymbol('settings', 'p')
			.rowx.collapse
				span.collapse.description(name='attr_description')
			.rowx.settings
				+textInput(`name`)
				+textarea('description')

mixin repeatingSkills(name)
	- const attrName = name.replace(/ /g, '-');
	.repeating-container
		fieldset(class=`repeating_${attrName}`)
			.rowx.grid
				button.d20 y
				+textInput(`name`)
				+checkboxSkills(name)

mixin skillColumns(name, abbreviation)
	- const repeating = repeatingSkills.includes(name) ? true : false;
	.rowx.grid
		.col
			h2(data-i18n=name)
			if abbreviation
				h2(data-i18n=abbreviation)
		+checkboxSkills(name)


mixin armorAreas(name, range)
	.col.border
		.rowx
			h2.text-center(data-i18n=name)
		.rowx.text-center
			span(data-i18n=range)
		.rowx.grid.2autocolumn
			h3.text-center(data-i18n='type')
			+textInput(name)
			