mixin textInput(name)
	- const attrName = name.replace(/ /g, '_');
	label(data-i18n-title=name)
		input(data-i18n-placeholder=name name=`attr_${attrName}` placeholder=name title=`@{${attrName}}` type='text' value='')

mixin numberInput(name)
	- const attrName = name.replace(/ /g, '_');
	label(data-i18n-title=name)
		input(name=`attr_${attrName}` placeholder='0' title=`@{${attrName}}` type='number' value=0)

mixin hiddenInput(name, value)
	- const attrName = name.replace(/ /g, '_');
	input(name=`attr_${attrName}` type='hidden' value=value)

mixin checkboxInput(name)
	- const attrName = name.replace(/ /g, '_');
	label.styled-checkbox.grid(data-i18n-title=name)
		input(name=`attr_${attrName}` title=`@{${attrName}}` type='checkbox' value=name)
		span.pictos 3

mixin checkboxSkills(name)
	- const attrName = name.replace(/ /g, '_').replace('(', '').replace(')', '');
	each val in skillRanks
		- const value = val === 'trained' ? 0 : val.slice(1);
		label.styled-checkbox.grid(data-i18n-title=name)
			input(name=`attr_${attrName}` title=`@{${attrName}}` type='checkbox' value=value)
			span.pictos 3

mixin checkboxSymbol (name, symbol)
	- const attrName = name.replace(/ /g, '_');
	input.toggles.text-center(name=`attr_${attrName}` title=`@{${attrName}}` type='checkbox' value=name)
	span.toggles.text-center.pictos #{symbol}

mixin textarea(name)
	textarea(name=`attr_${name}` placeholder=name)

mixin repeatingButton()
	button.text-left.eclipse.font-weight-bold(type='roll' value!=`${rollPrefix} ${repeatingEnding}`)
		span(name='attr_name')

- const rollPrefix = `@{gm_toggle} &{template:rolls}`;
- const rollEnding = `@{modifiers_toggle}-[[d100]])/10)cs>0cf<0`;
- const repeatingEnding = `{{header=@{name}}} {{desc=@{description}}}`;
mixin repeatingText(name)
	- const attrName = name.replace(/ /g, '-');
	fieldset(class=`repeating_${attrName}`)
		.rowx.grid.descriptor
			+repeatingButton()
			+checkboxSymbol('collapse', 'i')
			+checkboxSymbol('settings', 'p')
			.rowx.collapse.background-color
				span.collapse.description(name='attr_description')
			.rowx.settings
				+textInput(`name`)
				+textarea('description')

mixin repeatingSkills(name, abbreviation)
	- const sectionName = name.replace(/ /g, '-');
	- const score = characteristics[`${abbreviation}`];
	.repeating-container
		fieldset(class=`repeating_${sectionName}`)
			.rowx.grid
				button.d20.text-center(name=`roll_${name}` type='roll' value!=`${rollPrefix} {{header=^{${name}}}} {{dice=[[ceil((@{skill}+@{${score}}+${rollEnding}]]}}`) y
				+textInput(`name`)
				+checkboxSkills('skill')

mixin skillColumns(name, abbreviation)
	- const repeating = repeatingSkills.includes(name) ? true : false;
	- const score = characteristics[`${abbreviation}`];
	- const skill = name.replace(/ /g, '_').replace('(', '').replace(')', '');
	.rowx.grid
		.col
			button(name=`roll_${name}` type='roll' value!=`${rollPrefix} {{header=^{${name}}}} {{dice=[[ceil((@{${skill}}+@{${score}}+${rollEnding}]]}}`)
				h2(data-i18n=name)
				if abbreviation
					h2(data-i18n=abbreviation)
		+checkboxSkills(name)

mixin armorAreas(name, range)
	.col.border
		.rowx
			h2.text-center(data-i18n=name)
		.rowx.text-center
			span(data-i18n=range)
		.rowx.grid.2autocolumn
			h3.text-center(data-i18n='type')
			+textInput(name)
			